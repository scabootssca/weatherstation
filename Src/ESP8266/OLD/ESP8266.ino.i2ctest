#include <Wire.h>

#define SDA_PIN D3 // GPIO0 /*D1 // GPIO5*/
#define SCL_PIN D4 // GPIO2
#define I2C_SLAVE_ADDR 0x23

int i =0;

void setup()
{
  //Wire.begin(SDA_PIN, SCL_PIN);
  Wire.begin();
	//Wire.setClock(10);
	//Wire.setClockStretchLimit(1500);
  Serial.begin(9600);

	Serial.println();
	Serial.println("ESP Starting");
}

void loop()
{
	// Wire.beginTransmission(I2C_SLAVE_ADDR);
	// Wire.write(i++);
	// Wire.endTransmission();

	uint8_t result = Wire.requestFrom(I2C_SLAVE_ADDR, 8);
	Serial.print("Result: ");
	Serial.println(result);

	Serial.println(Wire.read());

	delay (1000);
}
// // Wire Master Reader
// // by Nicholas Zambetti <http://www.zambetti.com>
//
// // Demonstrates use of the Wire library
// // Reads data from an I2C/TWI slave device
// // Refer to the "Wire Slave Sender" example for use with this
//
// // Created 29 March 2006
//
// // This example code is in the public domain.
// #define SDA_PIN D3 // GPIO0 /*D1 // GPIO5*/
// #define SCL_PIN D4 // GPIO2
//
// #include <Wire.h>
// #include "RTClib.h"
//
// #define I2C_SLAVE_ADDRESS 57 // Address of the slave
//
//
// RTC_DS1307 RTC;
//
// void setup() {
// 	// SDA_PIN, SCL_PIN
//   Wire.begin(SDA_PIN, SCL_PIN);        // join i2c bus (address optional for master)
// 	Wire.setClock(50000L);
// 	//Wire.setClockStretchLimit(1500);
//
//   Serial.begin(9600);  // start s	Wire.setClock(50);erial for output
//
// 	RTC.begin();
//
//   // Check to see if the RTC is keeping time.  If it is, load the time from your computer.
//   if (!RTC.isrunning()) {
//     Serial.println("RTC is NOT running!");
//     // This will reflect the time that your sketch was compiled
//     RTC.adjust(DateTime(__DATE__, __TIME__));
//   }
//
// 	Serial.println();
// 	Serial.println("Started ESP");
// }
//
// void loop() {
// 	Serial.print("Now: ");
// 	Serial.println(RTC.now().unixtime());
//
//   Wire.requestFrom(I2C_SLAVE_ADDRESS, 2);    // request 1 bytes from slave device
//
//   while (Wire.available()) { // slave may send less than requested
//     char c = Wire.read(); // receive a byte as character
//
// 		for (int i=0;i<8;i++) {
// 			Serial.print((c>>i)&1);
// 		}
//
//     Serial.print(" ");         // print the character
//   }
//
// 	Serial.println();
//
//   delay(500);
// }
